/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package UX_UI;

import dao.NoiBoDAO;
import dao.PhongBanDAO;
import dao.UserDAO;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import library.Extension;
import library.MsgBox;
import library.XDate;
import library.XImage;
import model.NoiBo;
import model.PhongBan;
import model.User;

/**
 *
 * @author Admin
 */
public class JDialogQuanLyNhanVien extends javax.swing.JDialog {

    private int row;
    private String emailUpdate;

    /**
     * Creates new form JDialogQuanLyNhanVien2
     */
    public JDialogQuanLyNhanVien(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNgayThue = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        btnLuu = new javax.swing.JButton();
        lblAnh = new javax.swing.JLabel();
        cboPhongBan = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cboNguoiQuanLi = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtLuong = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        rdoYesFulltime = new javax.swing.JRadioButton();
        rdoNoFulltime = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        txtCaLam = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        rdoYesQuanLi = new javax.swing.JRadioButton();
        rdoNoQuanLi = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        txtNgaySinh = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtLuongThuong = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        txtPass = new javax.swing.JPasswordField();
        btnUpdate = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtHoTen = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuanLiThongTinKhachHang = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 0));
        jLabel2.setText("Thông Tin Nhân Viên");

        jLabel4.setText("Username");

        jLabel5.setText("Password");

        jLabel6.setText("Fulltime");

        jLabel7.setText("Email");

        jLabel8.setText("Giới tính");

        buttonGroup1.add(rdoNam);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setSelected(true);
        rdoNu.setText("Nữ");

        btnLuu.setFont(new java.awt.Font("Segoe UI Black", 2, 14)); // NOI18N
        btnLuu.setForeground(new java.awt.Color(0, 153, 255));
        btnLuu.setText("Save");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        lblAnh.setText("chọn ảnh");
        lblAnh.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhMouseClicked(evt);
            }
        });

        jLabel10.setText("Phòng ban");

        jLabel11.setText("Người Quản Lí");

        cboNguoiQuanLi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Lương");

        jLabel12.setText("Ngày thuê");

        buttonGroup2.add(rdoYesFulltime);
        rdoYesFulltime.setText("Yes");
        rdoYesFulltime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoYesFulltimeActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdoNoFulltime);
        rdoNoFulltime.setSelected(true);
        rdoNoFulltime.setText("No");

        jLabel13.setText("Ca làm");

        jLabel14.setText("Quản lí");

        buttonGroup3.add(rdoYesQuanLi);
        rdoYesQuanLi.setText("Yes");
        rdoYesQuanLi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoYesQuanLiActionPerformed(evt);
            }
        });

        buttonGroup3.add(rdoNoQuanLi);
        rdoNoQuanLi.setSelected(true);
        rdoNoQuanLi.setText("No");

        jLabel16.setText("Ngày sinh");

        jLabel17.setText("Lương thưởng");

        btnClear.setFont(new java.awt.Font("Segoe UI Black", 2, 14)); // NOI18N
        btnClear.setForeground(new java.awt.Color(0, 153, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI Black", 2, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 153, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI Black", 2, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 153, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel9.setText("Họ và Tên");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cboNguoiQuanLi, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel11)
                            .addComponent(jLabel6)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rdoYesFulltime, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdoNoFulltime, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCaLam, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(txtLuongThuong, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnLuu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnFirst)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrev)
                        .addGap(18, 18, 18)
                        .addComponent(btnNext)
                        .addGap(18, 18, 18)
                        .addComponent(btnLast))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(rdoYesQuanLi, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rdoNoQuanLi, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rdoNam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdoNu))
                            .addComponent(txtNgayThue)
                            .addComponent(jLabel12)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10)
                            .addComponent(cboPhongBan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtLuong)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {rdoNoFulltime, rdoYesFulltime});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnFirst, btnLast, btnNext, btnPrev});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(jLabel7)
                                .addGap(12, 12, 12)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addGap(7, 7, 7)
                                .addComponent(cboNguoiQuanLi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoYesFulltime)
                            .addComponent(rdoNoFulltime))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCaLam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLuongThuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(12, 12, 12)
                        .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(0, 0, 0)
                        .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgayThue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoYesQuanLi)
                            .addComponent(rdoNoQuanLi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoNam)
                            .addComponent(rdoNu))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuu)
                    .addComponent(btnClear)
                    .addComponent(btnUpdate)
                    .addComponent(btnFirst)
                    .addComponent(btnPrev)
                    .addComponent(btnNext)
                    .addComponent(btnLast)
                    .addComponent(btnDelete))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Thêm", jPanel2);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 0));
        jLabel1.setText("Quản Lý Thông Tin Nhân Viên");

        tblQuanLiThongTinKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "IDNoiBo", "IDUser", "Username", "Email", "Họ tên", "Giới tính", "Phòng ban", "Ngày thuê", "Ca làm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQuanLiThongTinKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQuanLiThongTinKhachHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQuanLiThongTinKhachHang);

        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtSearchMouseReleased(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 27, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(161, 161, 161))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Quản lý", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdoYesQuanLiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoYesQuanLiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoYesQuanLiActionPerformed

    private void rdoYesFulltimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoYesFulltimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoYesFulltimeActionPerformed

    private void tblQuanLiThongTinKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQuanLiThongTinKhachHangMouseClicked
        if (evt.getClickCount() == 2) {
            this.row = tblQuanLiThongTinKhachHang.getSelectedRow();
            this.edit();
            btnUpdate.setEnabled(true);
            btnDelete.setEnabled(true);
            btnLuu.setEnabled(false);
            txtUsername.setEnabled(false);
            emailUpdate = txtEmail.getText();
        }
    }//GEN-LAST:event_tblQuanLiThongTinKhachHangMouseClicked

    private void lblAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhMouseClicked
        chooseImage();
    }//GEN-LAST:event_lblAnhMouseClicked

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        insert();
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        update();
        emailUpdate = txtEmail.getText();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
        btnUpdate.setEnabled(true);
        btnLuu.setEnabled(false);
        btnDelete.setEnabled(true);
        txtUsername.setEnabled(false);
        emailUpdate = txtEmail.getText();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        prev();
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        txtUsername.setEnabled(false);
        btnLuu.setEnabled(false);
        emailUpdate = txtEmail.getText();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        txtUsername.setEnabled(false);
        btnLuu.setEnabled(false);
        emailUpdate = txtEmail.getText();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        txtUsername.setEnabled(false);
        btnLuu.setEnabled(false);
        emailUpdate = txtEmail.getText();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        delete();
        btnDelete.setEnabled(false);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtSearchMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseReleased

    }//GEN-LAST:event_txtSearchMouseReleased

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        fillTableSearch();
    }//GEN-LAST:event_txtSearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogQuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogQuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogQuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogQuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogQuanLyNhanVien dialog = new JDialogQuanLyNhanVien(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> cboNguoiQuanLi;
    private javax.swing.JComboBox<String> cboPhongBan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNoFulltime;
    private javax.swing.JRadioButton rdoNoQuanLi;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JRadioButton rdoYesFulltime;
    private javax.swing.JRadioButton rdoYesQuanLi;
    private javax.swing.JTable tblQuanLiThongTinKhachHang;
    private javax.swing.JTextField txtCaLam;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtLuongThuong;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtNgayThue;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
    private void init() {
        setLocationRelativeTo(null);
        fillComboBoxPhongBan();
        fillComboBoxNguoiQuanLi();
        fillTable();
        row = -1;
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        Extension.togglePassword(txtPass);
        Extension.setPlaceholder(txtUsername, "Nhập username");
//        Extension.setPlaceholder(txtPass, "Nhập pass");
        Extension.setPlaceholder(txtEmail, "example@gmail.com");
        Extension.setPlaceholder(txtLuong, "Nhập lương");
        Extension.setPlaceholder(txtNgayThue, "DD-MM-YYYY");
        Extension.setPlaceholder(txtNgaySinh, "DD-MM-YYYY");
        Extension.setPlaceholder(txtCaLam, "ca123-weekdays, ca456-weekends");
//        Extension.setPlaceholder(txtLuongThuong, "Nhập lương thưởng");
        Extension.setPlaceholder(txtLuongThuong, "0");
    }

    private void fillComboBoxPhongBan() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboPhongBan.getModel();
        model.removeAllElements();
        List<PhongBan> list = new PhongBanDAO().selectAll();
        for (PhongBan pb : list) {
            model.addElement(pb.getTenPB());
        }
    }

    private void fillComboBoxNguoiQuanLi() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNguoiQuanLi.getModel();
        model.removeAllElements();
        List<NoiBo> list = new NoiBoDAO().selectNguoiQuanLy();
        for (NoiBo nb : list) {
            model.addElement(nb.getIdNoiBo());
        }
    }

    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblQuanLiThongTinKhachHang.getModel();
        model.setRowCount(0);
        try {
            List<NoiBo> noiBo = new NoiBoDAO().selectAll();
//            List<PhongBan> pb = new PhongBanDAO().selectAll();
            for (NoiBo nb : noiBo) {
                User user = new UserDAO().selectByID(nb.getUserID());
                PhongBan pb = new PhongBanDAO().selectByID(nb.getIdPB());
                Object[] row = {
                    nb.getIdNoiBo(),
                    nb.getUserID(),
                    user.getUserName(),
                    user.getEmail(),
                    nb.getHoTen(),
                    nb.getGioiTinh() ? "Nam" : "Nữ",
                    pb != null ? pb.getTenPB() : "",
                    XDate.toString(nb.getNgayThue(), "dd-MM-yyyy"),
                    nb.getCaLam()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Lỗi truy vấn");
        }
    }

    private void fillTableSearch() {
        DefaultTableModel model = (DefaultTableModel) tblQuanLiThongTinKhachHang.getModel();
        model.setRowCount(0);
        try {
            String search = txtSearch.getText();
            System.out.println("Search: " + search);

            // Tìm kiếm trong bảng NoiBo
            List<NoiBo> noiBoList = new NoiBoDAO().search(search);
            for (NoiBo nb : noiBoList) {
                User user = new UserDAO().selectByID(nb.getUserID());
                PhongBan pb = new PhongBanDAO().selectByID(nb.getIdPB());

                Object[] row = {
                    nb.getIdNoiBo(),
                    nb.getUserID(),
                    user.getUserName(),
                    user.getEmail(),
                    nb.getHoTen(),
                    nb.getGioiTinh() ? "Nam" : "Nữ",
                    pb != null ? pb.getTenPB() : "",
                    XDate.toString(nb.getNgayThue(), "dd-MM-yyyy"),
                    nb.getCaLam()
                };

                model.addRow(row);
            }

            // Tìm kiếm trong bảng User (Nếu cần)
            // List<User> userList = new UserDAO().searchBenNoiBo(search);
            // Thêm dữ liệu vào bảng nếu cần
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Lỗi truy vấn");
        }
    }

    private void chooseImage() {
        JFileChooser jfc = new JFileChooser();
        FileFilter ff = new FileNameExtensionFilter("Hình ảnh", "jpg", "png");
        jfc.setFileFilter(ff);
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            XImage.save(selectedFile);

            // Đọc hình và giảm kích thước
            ImageIcon icon = XImage.read(selectedFile.getName());
            Image scaledImage = icon.getImage().getScaledInstance(lblAnh.getWidth(), lblAnh.getHeight(), Image.SCALE_SMOOTH);

            //Gán hình đã giảm kích thước vào lblAnh
            lblAnh.setIcon(new ImageIcon(scaledImage));
            lblAnh.setToolTipText(selectedFile.getName());
        }
    }

    private void setFormUser(User user) {
        txtUsername.setText(user.getUserName());
        txtPass.setText(user.getPassword());
        txtEmail.setText(user.getEmail());
    }

    private void setFormNoiBo(NoiBo nb) {
        PhongBan pb = new PhongBanDAO().selectByID(nb.getIdPB());
        if (pb != null) {
            cboPhongBan.setSelectedItem(pb.getTenPB());
        }
        cboNguoiQuanLi.setSelectedItem(nb.getIdQuanLy());
        txtLuong.setText(nb.getLuong() + "");
        if (nb.getFulltime()) {
            rdoYesFulltime.setSelected(true);
        } else {
            rdoNoFulltime.setSelected(true);
        }
        txtNgayThue.setText(XDate.toString(nb.getNgayThue(), "dd-MM-yyyy"));
        txtCaLam.setText(nb.getCaLam());
        if (nb.getQuanLy()) {
            rdoYesQuanLi.setSelected(true);
        } else {
            rdoNoQuanLi.setSelected(true);
        }
        txtNgaySinh.setText(XDate.toString(nb.getNgaySinh(), "dd-MM-yyyy"));
        if (nb.getGioiTinh()) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtLuongThuong.setText(nb.getLuongBong() + "");

        if (nb.getAvatar() != null) {
            // Đọc hình và giảm kích thước
            ImageIcon icon = XImage.read(nb.getAvatar());
            Image scaledImage = icon.getImage().getScaledInstance(lblAnh.getWidth(), lblAnh.getHeight(), Image.SCALE_SMOOTH);

            //Gán hình đã giảm kích thước vào lblAnh
            lblAnh.setIcon(new ImageIcon(scaledImage));
            lblAnh.setToolTipText(nb.getAvatar());
        } else {
            lblAnh.setIcon(null);
            lblAnh.setToolTipText(nb.getAvatar());
        }
    }

    private User getFormUser() {
        String pass = String.valueOf(txtPass.getPassword());
        User user = new User(Extension.randomString("nv", 10), txtUsername.getText(),
                pass, txtEmail.getText(), false, true);
        return user;
    }

    private User getFormUserUpdate() {
        String pass = String.valueOf(txtPass.getPassword());
        User user = new User();
        user.setUserName(txtUsername.getText());
        user.setPassword(pass);
        user.setEmail(txtEmail.getText());
        return user;
    }

    private NoiBo getFormNoiBo() {
        String tenPB = String.valueOf(cboPhongBan.getSelectedItem());
        //có tên phòng ban rồi lấy ra id để lưu vào bảng nội bộ
        PhongBan pb = new PhongBanDAO().selectByName(tenPB);

        int idQuanLy = (int) cboNguoiQuanLi.getSelectedItem();

        int luong = Integer.parseInt(txtLuong.getText());

        boolean fullTime;
        if (rdoYesFulltime.isSelected()) {
            fullTime = true;
        } else {
            fullTime = false;
        }

        Date ngayThue = XDate.toDate(txtNgayThue.getText(), "dd-MM-yyyy");
        String caLam = txtCaLam.getText();

        boolean quanLy;
        if (rdoYesQuanLi.isSelected()) {
            quanLy = true;
        } else {
            quanLy = false;
        }

        Date ngaySinh = XDate.toDate(txtNgaySinh.getText(), "dd-MM-yyyy");

        boolean gioiTinh;
        if (rdoNam.isSelected()) {
            gioiTinh = true;
        } else {
            gioiTinh = false;
        }
        
        String hoTen = txtHoTen.getText();

        int luongThuong = Integer.parseInt(txtLuongThuong.getText());

        String anh = lblAnh.getToolTipText();
////////////////////
        NoiBo nb = new NoiBo();
        nb.setIdPB(pb.getIdPB());
        nb.setIdQuanLy(idQuanLy);
        nb.setLuong(luong);
        nb.setFulltime(fullTime);
        nb.setNgayThue(ngayThue);
        nb.setCaLam(caLam);
        nb.setQuanLy(quanLy);
        nb.setNgaySinh(ngaySinh);
        nb.setGioiTinh(gioiTinh);
        nb.setLuongBong(luongThuong);
        nb.setAvatar(anh);
        nb.setHoTen(hoTen);
        return nb;
    }

    private void edit() {
        String makh = (String) tblQuanLiThongTinKhachHang.getValueAt(this.row, 1);
        User user = new UserDAO().selectByID(makh);
        this.setFormUser(user);
        int idNoiBo = (int) tblQuanLiThongTinKhachHang.getValueAt(this.row, 0);
        NoiBo nb = new NoiBoDAO().selectByID(idNoiBo);
        this.setFormNoiBo(nb);
        jTabbedPane1.setSelectedIndex(0);
    }

    private boolean check() {
        String thongBao = "";
        if (txtUsername.getText().trim().isEmpty() || txtUsername.getText().trim().equals("Nhập username")) {
            thongBao += "Bạn chưa nhập Username\n";
        }
        String pass = String.valueOf(txtPass.getPassword());
        if (pass.trim().isEmpty()) {
            thongBao += "Bạn chưa nhập Pass\n";
        }
        if (txtEmail.getText().trim().isEmpty() || txtEmail.getText().trim().equals("Nhập email")) {
            thongBao += "Bạn chưa nhập Email\n";
        }
        if (txtLuong.getText().trim().isEmpty() || txtLuong.getText().trim().equals("Nhập lương")) {
            thongBao += "Bạn chưa nhập Lương\n";
        }
        String ngayThue = txtNgayThue.getText().trim();
        if (ngayThue.isEmpty() || ngayThue.equals("Nhập ngày thuê")) {
            thongBao += "Bạn chưa nhập ngày thuê\n";
        } else if (!ngayThue.matches("\\d{1,2}-\\d{1,2}-\\d{4}")) {
            thongBao += "Ngày thuê phải có định dạng ngày-tháng-năm\n";
        } else {
            String[] parts = ngayThue.split("-");
            int ngay = Integer.parseInt(parts[0]);
            int thang = Integer.parseInt(parts[1]);
            int nam = Integer.parseInt(parts[2]);

            if (thang < 1 || thang > 12) {
                thongBao += "Tháng không hợp lệ\n";
            } else {
                int soNgayTrongThang = 31;

                if (thang == 4 || thang == 6 || thang == 9 || thang == 11) {
                    soNgayTrongThang = 30;
                } else if (thang == 2) {
                    if (nam % 4 == 0 && (nam % 100 != 0 || nam % 400 == 0)) {
                        soNgayTrongThang = 29; // Năm nhuận
                    } else {
                        soNgayTrongThang = 28;
                    }
                }
                if (ngay < 1 || ngay > soNgayTrongThang) {
                    thongBao += "Ngày không hợp lệ cho tháng này\n";
                }
            }
        }
        if (txtCaLam.getText().trim().isEmpty() || txtCaLam.getText().trim().equals("Nhập ca làm")) {
            thongBao += "Bạn chưa nhập ca làm\n";
        }

        String ngaySinh = txtNgaySinh.getText().trim();
        if (ngaySinh.isEmpty() || ngaySinh.equals("Nhập ngày sinh")) {
            thongBao += "Bạn chưa nhập ngày sinh\n";
        } else if (!ngaySinh.matches("\\d{1,2}-\\d{1,2}-\\d{4}")) {
            thongBao += "Ngày sinh phải có định dạng ngày-tháng-năm\n";
        } else {
            String[] parts = ngayThue.split("-");
            int ngay = Integer.parseInt(parts[0]);
            int thang = Integer.parseInt(parts[1]);
            int nam = Integer.parseInt(parts[2]);

            if (thang < 1 || thang > 12) {
                thongBao += "Tháng không hợp lệ\n";
            } else {
                int soNgayTrongThang = 31;

                if (thang == 4 || thang == 6 || thang == 9 || thang == 11) {
                    soNgayTrongThang = 30;
                } else if (thang == 2) {
                    if (nam % 4 == 0 && (nam % 100 != 0 || nam % 400 == 0)) {
                        soNgayTrongThang = 29; // Năm nhuận
                    } else {
                        soNgayTrongThang = 28;
                    }
                }
                if (ngay < 1 || ngay > soNgayTrongThang) {
                    thongBao += "Ngày không hợp lệ cho tháng này\n";
                }
            }
        }

        if (lblAnh.getIcon() == null) {
            thongBao += "Bạn chưa chọn ảnh\n";
        }
        if (thongBao.length() > 0) {
            MsgBox.alert(this, thongBao);
            return false;
        }
        return true;
    }

    private void clear() {
        this.row = -1;
//        User user = new User();
//        setFormUser(user);
//        NoiBo nb = new NoiBo();
//        setFormNoiBo(nb);
        txtUsername.setText("");
        txtPass.setText("");
        txtEmail.setText("");
        txtLuong.setText("");
        txtNgayThue.setText("");
        txtNgaySinh.setText("");
        txtCaLam.setText("");
//        txtLuongThuong.setText("");
        lblAnh.setToolTipText("");
        lblAnh.setIcon(null);
        btnUpdate.setEnabled(false);
        btnLuu.setEnabled(true);
        btnDelete.setEnabled(false);
        txtUsername.setEnabled(true);
        txtHoTen.setText("");

        Extension.togglePassword(txtPass);
        Extension.setPlaceholder(txtUsername, "Nhập username");
//        Extension.setPlaceholder(txtPass, "Nhập pass");
        Extension.setPlaceholder(txtEmail, "Nhập email");
        Extension.setPlaceholder(txtLuong, "Nhập lương");
        Extension.setPlaceholder(txtNgayThue, "Nhập ngày thuê");
        Extension.setPlaceholder(txtNgaySinh, "Nhập ngày sinh");
        Extension.setPlaceholder(txtCaLam, "Nhập ca làm");
//        Extension.setPlaceholder(txtLuongThuong, "Nhập lương thưởng");
        Extension.setPlaceholder(txtLuongThuong, "0");
    }

    private void insert() {
        if (check()) {
            String username = txtUsername.getText();
            String email = txtEmail.getText();
            try {
                User userUsername = new UserDAO().selectByUsername(username);
                if (userUsername != null) {
                    MsgBox.alert(this, "Username đã tồn tại");
                    return;

                }
                User userEmail = new UserDAO().selectByEmail(email);
                if (userEmail != null) {
                    MsgBox.alert(this, "Email đã tồn tại");
                    return;

                }

            } catch (Exception e) {
                e.printStackTrace();
            }

            User u = getFormUser();

            try {
                new UserDAO().insert(u);

                //khi insert xong thì sẽ update noibo
                NoiBo nb = getFormNoiBo();
                nb.setUserID(u.getUserID());
                new NoiBoDAO().update(nb);

                this.fillTable();
                MsgBox.alert(this, "Thêm mới thành công");
            } catch (Exception e) {
                e.printStackTrace();
                MsgBox.alert(this, "Thêm mới thất bại");
            }

        }
    }

    private void update() {
        if (check()) {
//            String username = txtUsername.getText();
//            String email = txtEmail.getText();
            try {
//                User userUsername = new UserDAO().selectByUsername(username);
//                if (userUsername != null) {
//                    MsgBox.alert(this, "Username đã tồn tại");
//                    return;
//
//                }
//                User userEmail = new UserDAO().selectByEmail(email);
//                if (userEmail != null) {
//                    MsgBox.alert(this, "Email đã tồn tại");
//                    return;
//            }
                ArrayList<User> user = new UserDAO().select();
                for (User user1 : user) {
                    if (txtEmail.getText().equalsIgnoreCase(user1.getEmail()) && !txtEmail.getText().equalsIgnoreCase(emailUpdate)) {
                        MsgBox.alert(this, "Email đã tồn tại");
                        return;
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }

            User u = getFormUserUpdate();
            try {
                new UserDAO().updateByUsername(u);
                User u2 = new UserDAO().selectByUsername(u.getUserName());

                NoiBo nb = getFormNoiBo();
                nb.setUserID(u2.getUserID());
                new NoiBoDAO().update(nb);

                fillTable();
                MsgBox.alert(this, "Cập nhật thành công");
            } catch (Exception e) {
                e.printStackTrace();
                MsgBox.alert(this, "Cập nhật thất bại");
            }
        }
    }

    private void delete() {
        try {
            if (MsgBox.confirm(this, "Bạn có muốn xóa nhân viên này")) {
                //xóa nhân viên

                User user = new UserDAO().selectByUsername(txtUsername.getText());

                NoiBo nb = new NoiBo();
                nb.setUserID(user.getUserID());
                new NoiBoDAO().deleteByUserID(nb);

                // xóa user
                User u = new User();
                u.setUserID(user.getUserID());
                new UserDAO().delete(u);
                //fill lại table
                fillTable();
                MsgBox.alert(this, "Xóa thành công");
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Xóa thất bại");
        }
    }

    private void first() {
        this.row = 0;
        this.edit();
    }

    private void last() {
        this.row = tblQuanLiThongTinKhachHang.getRowCount() - 1;
        this.edit();
    }

    private void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        } else {
            this.row = tblQuanLiThongTinKhachHang.getRowCount() - 1;
            this.edit();
        }
    }

    private void next() {
        if (this.row < tblQuanLiThongTinKhachHang.getRowCount() - 1) {
            this.row++;
            this.edit();
        } else {
            this.row = 0;
            this.edit();
        }
    }

}
