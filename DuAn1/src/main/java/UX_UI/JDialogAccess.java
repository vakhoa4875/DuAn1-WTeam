/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package UX_UI;

import dao.AccessDAO;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import library.Auth;
import library.MsgBox;
import model.Access;

/**
 *
 * @author TAN LOC
 */
public class JDialogAccess extends javax.swing.JDialog {

    AccessDAO dao = new AccessDAO();
    int row = -1;

    /**
     * Creates new form JDialogAccess
     */
    public JDialogAccess(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        lblfullAccess1 = new javax.swing.JLabel();
        chkfullAccess = new javax.swing.JCheckBox();
        chkrReadList = new javax.swing.JCheckBox();
        jLabel38 = new javax.swing.JLabel();
        chkuReadList = new javax.swing.JCheckBox();
        jLabel42 = new javax.swing.JLabel();
        chkrWishList = new javax.swing.JCheckBox();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        chkuWishList = new javax.swing.JCheckBox();
        jLabel45 = new javax.swing.JLabel();
        chkrUser = new javax.swing.JCheckBox();
        chkuUser = new javax.swing.JCheckBox();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        chkrPhongBan = new javax.swing.JCheckBox();
        jLabel48 = new javax.swing.JLabel();
        chkuPhongBan = new javax.swing.JCheckBox();
        chkrSach = new javax.swing.JCheckBox();
        jLabel49 = new javax.swing.JLabel();
        chkrReader = new javax.swing.JCheckBox();
        chkuReader = new javax.swing.JCheckBox();
        chkuNoiBo = new javax.swing.JCheckBox();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        chkuSach = new javax.swing.JCheckBox();
        chkrNoiBo = new javax.swing.JCheckBox();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        chkuTacGia = new javax.swing.JCheckBox();
        chkrTheLoai = new javax.swing.JCheckBox();
        jLabel55 = new javax.swing.JLabel();
        chkrTacGia = new javax.swing.JCheckBox();
        chkuTheLoai = new javax.swing.JCheckBox();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        lblidAccess1 = new javax.swing.JLabel();
        txtidAccess = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMota = new javax.swing.JTextArea();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnfirst = new javax.swing.JButton();
        btnprev = new javax.swing.JButton();
        btnnext = new javax.swing.JButton();
        btnlast = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccess = new javax.swing.JTable();
        txtFind = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/github64.png"))); // NOI18N

        lblName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblName.setText("Tên: ");

        lblRole.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRole.setText("Vai Trò: ");

        lblfullAccess1.setText("Toàn Quyền");

        chkfullAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkfullAccessActionPerformed(evt);
            }
        });

        jLabel38.setText("Xem Readlist");

        jLabel42.setText("Chỉnh sửa Readlist");

        jLabel43.setText("Xem Wishlist");

        jLabel44.setText("Chỉnh sửa Wishlist");

        jLabel45.setText("Xem Tài Khoản");

        jLabel46.setText("Chỉnh sửa Tài Khoản");

        jLabel47.setText("Xem Phòng Ban");

        chkrPhongBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkrPhongBanActionPerformed(evt);
            }
        });

        jLabel48.setText("Chỉnh sửa Phòng Ban");

        jLabel49.setText("Xem Sách");

        chkuNoiBo.setText(" ");

        jLabel50.setText("Chỉnh sửa Sách");

        jLabel51.setText("Chỉnh sửa Nội Bộ");

        chkrNoiBo.setText(" ");

        jLabel52.setText("Xem Người Đọc");

        jLabel53.setText("Chỉnh sửa Người Đọc");

        jLabel54.setText("Xem Nội Bộ");

        chkuTacGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkuTacGiaActionPerformed(evt);
            }
        });

        chkrTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkrTheLoaiActionPerformed(evt);
            }
        });

        jLabel55.setText("Xem Tác Giả");

        chkrTacGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkrTacGiaActionPerformed(evt);
            }
        });

        jLabel56.setText("Chỉnh sửa Tác Giả");

        jLabel57.setText("Xem Thể Loại");

        jLabel58.setText("Chỉnh sửa Thể Loại");

        lblidAccess1.setText("Access ID:");

        txtidAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidAccessActionPerformed(evt);
            }
        });

        jLabel3.setText("Mô Tả");

        txtMota.setColumns(20);
        txtMota.setRows(5);
        jScrollPane2.setViewportView(txtMota);

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnfirst.setText("|<");
        btnfirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfirstActionPerformed(evt);
            }
        });

        btnprev.setText("<<");
        btnprev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprevActionPerformed(evt);
            }
        });

        btnnext.setText(">>");
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });

        btnlast.setText(">|");
        btnlast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblidAccess1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtidAccess))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblfullAccess1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkfullAccess, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkrReadList, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkuReadList, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkrWishList, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkuWishList, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkrPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkuPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(chkrUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkuUser, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkuSach, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkrSach, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkuNoiBo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkrNoiBo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkrReader, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkuReader, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chkrTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkuTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkuTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkrTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(355, 355, 355)
                .addComponent(btnInsert)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnNew)
                .addGap(18, 18, 18)
                .addComponent(btnfirst)
                .addGap(18, 18, 18)
                .addComponent(btnprev)
                .addGap(18, 18, 18)
                .addComponent(btnnext)
                .addGap(18, 18, 18)
                .addComponent(btnlast)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblidAccess1)
                                    .addComponent(txtidAccess, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(chkfullAccess)
                                    .addComponent(lblfullAccess1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel38)
                                    .addComponent(chkrReadList))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel42)
                                    .addComponent(chkuReadList))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkrWishList)
                                    .addComponent(jLabel43))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44)
                                    .addComponent(chkuWishList)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkrSach)
                                    .addComponent(jLabel49, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkuSach)
                                    .addComponent(jLabel50))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel45)
                                    .addComponent(chkrUser))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel46)
                                    .addComponent(chkuUser))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkrPhongBan)
                                    .addComponent(jLabel47))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel48)
                                    .addComponent(chkuPhongBan)))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(82, 82, 82)
                                            .addComponent(jLabel57))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel55)
                                                .addComponent(chkrTacGia))
                                            .addGap(23, 23, 23)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel56)
                                                .addComponent(chkuTacGia))
                                            .addGap(18, 18, 18)
                                            .addComponent(chkrTheLoai)))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chkuTheLoai)
                                        .addComponent(jLabel58)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chkrReader)
                                        .addComponent(jLabel52))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(chkuReader)
                                        .addComponent(jLabel53))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel54)
                                        .addComponent(chkrNoiBo))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel51)
                                        .addComponent(chkuNoiBo)))))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnNew)
                    .addComponent(btnfirst)
                    .addComponent(btnprev)
                    .addComponent(btnnext)
                    .addComponent(btnlast))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        tabs.addTab("Chi tiết Quyền Truy Cập", jPanel2);

        tblAccess.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Full Q`", "rReadList", "uReadList", "rWishList", "uWishList", "rUser", "uUser", "Xem PB", "Update PB", "rSach", "uSach", "rReader", "uReader", "rNoiBo", "uNoiBo", "rTacGia", "uTacGia", "rTheLoai", "uTheLoai", "Mô Tả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAccess.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAccessMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAccess);

        txtFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFindKeyReleased(evt);
            }
        });

        jButton1.setText("Tìm Kiếm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(400, 400, 400)
                        .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 471, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("Table Quyền Truy Cập", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 1309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(487, 487, 487))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblName)
                        .addGap(18, 18, 18)
                        .addComponent(lblRole)
                        .addGap(15, 15, 15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkfullAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkfullAccessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkfullAccessActionPerformed

    private void chkrPhongBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkrPhongBanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkrPhongBanActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        insert();
    }//GEN-LAST:event_btnInsertActionPerformed

    private void tblAccessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAccessMouseClicked
        // TODO add your handling code here:
        row = tblAccess.getSelectedRow();
        edit();

    }//GEN-LAST:event_tblAccessMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        New();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnfirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnfirstActionPerformed

    private void btnprevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprevActionPerformed
        // TODO add your handling code here:
        prev();
    }//GEN-LAST:event_btnprevActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnnextActionPerformed

    private void btnlastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnlastActionPerformed

    private void txtFindKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFindKeyReleased
        // TODO add your handling code here:
//        int keyword = Integer.parseInt(txtFind.getText());
//        if()
//        selectbykeyword(keyword);
    }//GEN-LAST:event_txtFindKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            Integer keyword = Integer.parseInt(txtFind.getText());
            selectbykeyword(keyword);
        } catch (Exception e) {
            System.out.println("Loi");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtidAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidAccessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidAccessActionPerformed

    private void chkuTacGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkuTacGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkuTacGiaActionPerformed

    private void chkrTacGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkrTacGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkrTacGiaActionPerformed

    private void chkrTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkrTheLoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkrTheLoaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogAccess dialog = new JDialogAccess(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnfirst;
    private javax.swing.JButton btnlast;
    private javax.swing.JButton btnnext;
    private javax.swing.JButton btnprev;
    private javax.swing.JCheckBox chkfullAccess;
    private javax.swing.JCheckBox chkrNoiBo;
    private javax.swing.JCheckBox chkrPhongBan;
    private javax.swing.JCheckBox chkrReadList;
    private javax.swing.JCheckBox chkrReader;
    private javax.swing.JCheckBox chkrSach;
    private javax.swing.JCheckBox chkrTacGia;
    private javax.swing.JCheckBox chkrTheLoai;
    private javax.swing.JCheckBox chkrUser;
    private javax.swing.JCheckBox chkrWishList;
    private javax.swing.JCheckBox chkuNoiBo;
    private javax.swing.JCheckBox chkuPhongBan;
    private javax.swing.JCheckBox chkuReadList;
    private javax.swing.JCheckBox chkuReader;
    private javax.swing.JCheckBox chkuSach;
    private javax.swing.JCheckBox chkuTacGia;
    private javax.swing.JCheckBox chkuTheLoai;
    private javax.swing.JCheckBox chkuUser;
    private javax.swing.JCheckBox chkuWishList;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblfullAccess1;
    private javax.swing.JLabel lblidAccess1;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblAccess;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextArea txtMota;
    private javax.swing.JTextField txtidAccess;
    // End of variables declaration//GEN-END:variables

    void init() {
        filltable();
        updateStatus();
        txtFind.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                if (txtFind.getText().isBlank()) {
                    filltable();
                } else {
                    selectbykeyword(Integer.valueOf(txtFind.getText()));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                if (txtFind.getText().isBlank()) {
                    filltable();
                } else {
                    selectbykeyword(Integer.valueOf(txtFind.getText()));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                if (txtFind.getText().isBlank()) {
                    filltable();
                } else {
                    selectbykeyword(Integer.valueOf(txtFind.getText()));
                }
            }
        });
    }

    void filltable() {
        DefaultTableModel model = (DefaultTableModel) tblAccess.getModel();
        model.setRowCount(0);
        ArrayList<Access> list = dao.selectAll();

        for (Access access : list) {
            Object[] row = {
                access.getIdAccess(),
                access.getFullAccess(),
                access.getrReadlist(),
                access.getuReadlist(),
                access.getrWishlist(),
                access.getuWishlist(),
                access.getrUser(),
                access.getuUser(),
                access.getrPhongBan(),
                access.getuPhongBan(),
                access.getrSach(),
                access.getuSach(),
                access.getrReader(),
                access.getuReader(),
                access.getrNoiBo(),
                access.getuNoiBo(),
                access.getrTacGia(),
                access.getuTacGia(),
                access.getrTheLoai(),
                access.getuTheLoai(),
                access.getMoTa()
            };

            model.addRow(row);
        }
    }

    void edit() {
        try {
            Integer idaccess = (Integer) tblAccess.getValueAt(row, 0);
            Access ac = dao.selectById(idaccess);

            if (ac != null) {
                setFrom(ac);
                tabs.setSelectedIndex(0);
            }
            updateStatus();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    void setFrom(Access ac) {
        txtidAccess.setText(String.valueOf(ac.getIdAccess()));
        chkfullAccess.setSelected(ac.getFullAccess());
        chkrReadList.setSelected(ac.getrReadlist());
        chkuReadList.setSelected(ac.getuReadlist());
        chkrWishList.setSelected(ac.getrWishlist());
        chkuWishList.setSelected(ac.getuWishlist());
        chkrUser.setSelected(ac.getrUser());
        chkuUser.setSelected(ac.getuUser());
        chkrPhongBan.setSelected(ac.getrPhongBan());
        chkuPhongBan.setSelected(ac.getuPhongBan());
        chkrSach.setSelected(ac.getrSach());
        chkuSach.setSelected(ac.getuSach());
        chkrReader.setSelected(ac.getrReader());
        chkuReader.setSelected(ac.getuReader());
        chkrNoiBo.setSelected(ac.getrNoiBo());
        chkuNoiBo.setSelected(ac.getuNoiBo());
        chkrTacGia.setSelected(ac.getrTacGia());
        chkuTacGia.setSelected(ac.getuTacGia());
        chkrTheLoai.setSelected(ac.getrTheLoai());
        chkuTheLoai.setSelected(ac.getuTheLoai());
        txtMota.setText(ac.getMoTa());
        updateStatus();
    }

    void insert() {
        Access acInsert = getForm();
        try {
            dao.insert(acInsert);
            filltable();
            MsgBox.alert(this, "Insert sucessffuly");

        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Insert failed");
        }
    }

    void update() {
        Access ac = getForm();
        try {
            dao.update(ac);
            filltable();
            MsgBox.alert(this, "Update thành công");
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Update thất bại");
        }
    }

    void delete() {
        if (MsgBox.confirm(this, "Bạn có muốn xóa access này không?")) {
            int idaccess = Integer.parseInt(txtidAccess.getText());
            try {
                dao.delete(idaccess);
                filltable();
                New();
                MsgBox.alert(this, "Xóa Access thành công");
            } catch (Exception e) {
                e.printStackTrace();
                MsgBox.alert(this, "Xóa Access thất bại");

            }
        }
    }

    Access getForm() {
        Access ac = new Access();
        ac.setIdAccess(Integer.parseInt(txtidAccess.getText()));
        ac.setFullAccess(chkfullAccess.isSelected());
        ac.setrReadlist(chkrReadList.isSelected());
        ac.setuReadlist(chkuReadList.isSelected());
        ac.setrWishlist(chkrWishList.isSelected());
        ac.setuWishlist(chkuWishList.isSelected());
        ac.setrUser(chkrUser.isSelected());
        ac.setuUser(chkuUser.isSelected());
        ac.setrPhongBan(chkrPhongBan.isSelected());
        ac.setuPhongBan(chkuPhongBan.isSelected());
        ac.setrSach(chkrSach.isSelected());
        ac.setuSach(chkuSach.isSelected());
        ac.setrReader(chkrReader.isSelected());
        ac.setuReader(chkuReader.isSelected());
        ac.setrNoiBo(chkrNoiBo.isSelected());
        ac.setuNoiBo(chkuNoiBo.isSelected());
        ac.setrTacGia(chkrTacGia.isSelected());
        ac.setuTacGia(chkuTacGia.isSelected());
        ac.setrTheLoai(chkrTheLoai.isSelected());
        ac.setuTheLoai(chkuTheLoai.isSelected());
        ac.setMoTa(txtMota.getText());

        return ac;
    }

    void New() {
        Access ac = new Access();

        ac.setIdAccess(0);
        ac.setFullAccess(false);
        ac.setrReadlist(false);
        ac.setuReadlist(false);
        ac.setrWishlist(false);
        ac.setuWishlist(false);
        ac.setrUser(false);
        ac.setuUser(false);
        ac.setrPhongBan(false);
        ac.setuPhongBan(false);
        ac.setrSach(false);
        ac.setuSach(false);
        ac.setrReader(false);
        ac.setuReader(false);
        ac.setrNoiBo(false);
        ac.setuNoiBo(false);
        ac.setrTacGia(false);
        ac.setuTacGia(false);
        ac.setrTheLoai(false);
        ac.setuTheLoai(false);
        ac.setMoTa("");

        setFrom(ac);

        row = -1;
    }

    void first() {
        this.row = 0;
        this.edit();
    }

    void last() {
        this.row = tblAccess.getRowCount() - 1;
        this.edit();
    }

    void prev() {
        if (row > 0) {
            this.row--;
            this.edit();
        }
    }

    void next() {
        if (this.row < tblAccess.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
    }

    void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblAccess.getRowCount() - 1);
        //trang thai form
//        txtMaNV.setEditable(!edit);
        btnInsert.setEnabled(!edit);
        btnUpdate.setEnabled(edit);
        btnDelete.setEnabled(edit);
        //trang thai deu huong
        this.btnfirst.setEnabled(edit && !first);
        btnprev.setEnabled(edit && !first);
        btnnext.setEnabled(edit && !last);
        btnlast.setEnabled(edit && !last);
    }

    void selectbykeyword(int idaccess) {
        DefaultTableModel model = (DefaultTableModel) tblAccess.getModel();
        model.setRowCount(0);
        ArrayList<Access> list = dao.selectByKeyWord(idaccess);
        for (Access access : list) {

            Object[] row = {
                access.getIdAccess(),
                access.getFullAccess(),
                access.getrReadlist(),
                access.getuReadlist(),
                access.getrWishlist(),
                access.getuWishlist(),
                access.getrUser(),
                access.getuUser(),
                access.getrPhongBan(),
                access.getuPhongBan(),
                access.getrSach(),
                access.getuSach(),
                access.getrReader(),
                access.getuReader(),
                access.getrNoiBo(),
                access.getuNoiBo(),
                access.getrTacGia(),
                access.getuTacGia(),
                access.getrTheLoai(),
                access.getuTheLoai(),
                access.getMoTa()
            };
            model.addRow(row);
        }
    }

}
