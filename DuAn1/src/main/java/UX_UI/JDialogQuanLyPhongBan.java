/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package UX_UI;

import dao.PhongBanDAO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import library.Extension;
import library.MsgBox;
import model.PhongBan;

/**
 *
 * @author Admin
 */
public class JDialogQuanLyPhongBan extends javax.swing.JDialog {
    
    private int row;
    
    static int indexRowStatic = 0;

    /**
     * Creates new form JDialogQuanLyPhongBan
     */
    public JDialogQuanLyPhongBan(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblQuanLyPhongBan = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtTiemKiem = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtIDPhongBan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtQuanLiAccess = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNhanVienAccess = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTenPhongBan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblFirst = new javax.swing.JLabel();
        lblBack = new javax.swing.JLabel();
        lblLast = new javax.swing.JLabel();
        lblNext = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblQuanLyPhongBan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Quản Lý Access", "Nhân Viên Access", "Tên Phòng Ban"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQuanLyPhongBan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQuanLyPhongBanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblQuanLyPhongBan);

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 2, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 102, 0));
        jLabel7.setText("Quản Lý Phòng Ban");

        btnUpdate.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtTiemKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTiemKiemKeyReleased(evt);
            }
        });

        lblTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/TimKiem.png"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 2, 12)); // NOI18N
        jLabel8.setText("Tìm Kiếm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(100, 100, 100)
                                        .addComponent(btnUpdate)
                                        .addGap(113, 113, 113)
                                        .addComponent(btnDelete)
                                        .addGap(95, 95, 95))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(txtTiemKiem)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(164, 164, 164))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTiemKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Quản Lý", jPanel2);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Thông Tin Phòng Ban");

        jLabel1.setText("ID Phòng Ban");

        txtIDPhongBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDPhongBanActionPerformed(evt);
            }
        });

        jLabel3.setText("Quản lí Access");

        txtQuanLiAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuanLiAccessActionPerformed(evt);
            }
        });

        jLabel4.setText("Nhân Viên Access");

        txtNhanVienAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNhanVienAccessActionPerformed(evt);
            }
        });

        jLabel5.setText("Tên Phòng Ban");

        txtTenPhongBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenPhongBanActionPerformed(evt);
            }
        });

        jLabel6.setText("Mô tả");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane1.setViewportView(txtMoTa);

        btnSave.setFont(new java.awt.Font("Segoe UI Black", 2, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Segoe UI Black", 2, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblFirst.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/skip-to-start-16.png"))); // NOI18N
        lblFirst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFirstMouseClicked(evt);
            }
        });

        lblBack.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rewind-16.png"))); // NOI18N
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBackMouseClicked(evt);
            }
        });

        lblLast.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/end-16.png"))); // NOI18N
        lblLast.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLastMouseClicked(evt);
            }
        });

        lblNext.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fast-forward-16.png"))); // NOI18N
        lblNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNextMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblBack, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblNext, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblLast, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(txtNhanVienAccess, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtIDPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(86, 86, 86)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtQuanLiAccess, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5)
                                .addComponent(txtTenPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(112, 112, 112))))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtIDPhongBan, txtNhanVienAccess, txtQuanLiAccess, txtTenPhongBan});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIDPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuanLiAccess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNhanVienAccess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTenPhongBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(lblFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNext, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLast, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );

        jTabbedPane1.addTab("Thêm", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenPhongBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenPhongBanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenPhongBanActionPerformed

    private void txtNhanVienAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNhanVienAccessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNhanVienAccessActionPerformed

    private void txtQuanLiAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuanLiAccessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuanLiAccessActionPerformed

    private void txtIDPhongBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDPhongBanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDPhongBanActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        insert();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblQuanLyPhongBanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQuanLyPhongBanMouseClicked
        if (evt.getClickCount() == 2) {
            this.row = tblQuanLyPhongBan.getSelectedRow();
            //lấy giá trị của hàng rồi truyền vào biến static
            indexRowStatic = tblQuanLyPhongBan.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblQuanLyPhongBanMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        delete();        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtTiemKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTiemKiemKeyReleased
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_txtTiemKiemKeyReleased

    private void lblFirstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFirstMouseClicked
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_lblFirstMouseClicked

    private void lblLastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLastMouseClicked
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_lblLastMouseClicked

    private void lblBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseClicked
        // TODO add your handling code here:
        back();
    }//GEN-LAST:event_lblBackMouseClicked

    private void lblNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNextMouseClicked
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_lblNextMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogQuanLyPhongBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogQuanLyPhongBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogQuanLyPhongBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogQuanLyPhongBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogQuanLyPhongBan dialog = new JDialogQuanLyPhongBan(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblFirst;
    private javax.swing.JLabel lblLast;
    private javax.swing.JLabel lblNext;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JTable tblQuanLyPhongBan;
    private javax.swing.JTextField txtIDPhongBan;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtNhanVienAccess;
    private javax.swing.JTextField txtQuanLiAccess;
    private javax.swing.JTextField txtTenPhongBan;
    private javax.swing.JTextField txtTiemKiem;
    // End of variables declaration//GEN-END:variables
      private void init() {
        setLocationRelativeTo(null);
        fillTable();
        row = -1;
        Extension.setPlaceholder(txtNhanVienAccess, "Nhập nhân viên access");
        Extension.setPlaceholder(txtIDPhongBan, "Nhập ID");
        Extension.setPlaceholder(txtQuanLiAccess, "Nhập quản lý access");
        Extension.setPlaceholder(txtTenPhongBan, "Nhập tên phòng ban");
    }
    
    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblQuanLyPhongBan.getModel();
        model.setRowCount(0);
        try {
            List<PhongBan> list = new PhongBanDAO().selectAll();
            for (PhongBan pb : list) {
                Object[] row = {pb.getIdPB(), pb.getQlAccess(), pb.getNvAccess(), pb.getTenPB()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn");
        }
    }
    
    private void setForm(PhongBan pb) {
        txtIDPhongBan.setText(pb.getIdPB() + "");
        txtQuanLiAccess.setText(pb.getQlAccess() + "");
        txtNhanVienAccess.setText(pb.getNvAccess() + "");
        txtTenPhongBan.setText(pb.getTenPB());
        txtMoTa.setText(pb.getMoTa());
    }
    
    private PhongBan getForm() {
        PhongBan phongBan = new PhongBan(Integer.parseInt(txtIDPhongBan.getText()),
                Integer.parseInt(txtQuanLiAccess.getText()),
                Integer.parseInt(txtNhanVienAccess.getText()),
                txtTenPhongBan.getText(),
                txtMoTa.getText()
        );
        return phongBan;
    }
    
    private void clearForm() {
        PhongBan pb = new PhongBan();
        this.setForm(pb);
        txtIDPhongBan.setText("");
        txtNhanVienAccess.setText("");
        txtQuanLiAccess.setText("");
        this.row = -1;
        btnSave.setEnabled(true);
    }
    
    private void edit() {
        int idPhongBan = (int) (tblQuanLyPhongBan.getValueAt(this.row, 0));
        
        PhongBan pb = new PhongBanDAO().selectByID(idPhongBan);
        this.setForm(pb);
        btnSave.setEnabled(false);
        jTabbedPane1.setSelectedIndex(1);
    }
    
    private boolean check() {
        String thongBao = "";
        
        String id = txtIDPhongBan.getText().trim();
        if (id.isEmpty() || id.equals("Nhập ID")) {
            thongBao += "Bạn chưa nhập ID phòng ban\n";
        } else if (!txtIDPhongBan.getText().matches("\\d+")) {
            thongBao += "ID phòng ban chỉ được nhập số\n";
        }
        
        String quanLyAccess = txtQuanLiAccess.getText().trim();
        if (quanLyAccess.isEmpty() || quanLyAccess.equals("Nhập quản lý access")) {
            thongBao += "Bạn chưa nhập quản lý access\n";
        } else if (!txtQuanLiAccess.getText().matches("\\d+")) {
            thongBao += "Quản lý access chỉ được nhập số\n";
        }
        
        String nhanVienAccess = txtNhanVienAccess.getText().trim();
        if (nhanVienAccess.isEmpty() || nhanVienAccess.equals("Nhập nhân viên access")) {
            thongBao += "Bạn chưa nhập nhân viên access\n";
        } else if (!txtNhanVienAccess.getText().matches("\\d+")) {
            thongBao += "Nhân viên access chỉ được nhập số\n";
        }
        
        String tenPhongBan = txtTenPhongBan.getText().trim();
        if (tenPhongBan.isEmpty() || tenPhongBan.equals("Nhập tên phòng ban")) {
            thongBao += "Bạn chưa nhập tên phòng ban\n";
        }
        
        if (txtMoTa.getText().trim().isEmpty()) {
            thongBao += "Bạn chưa nhập mô tả\n";
        }
        
        if (thongBao.length() > 0) {
            MsgBox.alert(this, thongBao);
            return false;
        }
        
        return true;
    }
    
    private void insert() {
        if (check()) {
            
            String idPhongBan = txtIDPhongBan.getText();
            try {
                PhongBan pb = new PhongBanDAO().selectByID(Integer.parseInt(idPhongBan));
                if (pb != null) {
                    MsgBox.alert(this, "ID phòng ban đã tồn tại");
                    return;
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            
            PhongBan pb = getForm();
            try {
                new PhongBanDAO().insert(pb);
                this.fillTable();
                MsgBox.alert(this, "Thêm mới thành công");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm mới thất bại");
            }
            
        }
    }
    
    private void update() {
        try {
            
            for (int i = 0; i < tblQuanLyPhongBan.getRowCount(); i++) {
                int idphongban = (Integer) tblQuanLyPhongBan.getValueAt(i, 0);
                PhongBan pb = new PhongBanDAO().selectByID(idphongban);
                int qlaccess = (int) tblQuanLyPhongBan.getValueAt(i, 1);
                pb.setQlAccess(qlaccess);
                int nvAccess = (int) tblQuanLyPhongBan.getValueAt(i, 2);
                pb.setNvAccess(nvAccess);
                String tenPhongBan = (String) tblQuanLyPhongBan.getValueAt(i, 3);
                pb.setTenPB(tenPhongBan);
                new PhongBanDAO().update(pb);
            }
            this.fillTable();
            MsgBox.alert(this, "Cập nhật phòng ban thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật phòng ban thất bại");
            e.printStackTrace();
        }
    }
    
    private void delete() {
        try {
            if (MsgBox.confirm(this, "Bạn muốn xóa các phòng ban được chọn?")) {
                for (int row : tblQuanLyPhongBan.getSelectedRows()) {
                    int idPhongBan = (Integer) tblQuanLyPhongBan.getValueAt(row, 0);
                    new PhongBanDAO().delete(idPhongBan);
                }
                this.fillTable();
                MsgBox.alert(this, "Xóa Ok");
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa không ok");
            e.printStackTrace();
        }
    }
    
    private void timKiem() {
        DefaultTableModel model = (DefaultTableModel) tblQuanLyPhongBan.getModel();
        model.setRowCount(0);
        try {
            String keyWord = txtTiemKiem.getText();
            List<PhongBan> list = new PhongBanDAO().selectByKeyWord(keyWord);
            for (PhongBan phongBan : list) {
                Object[] row = {
                    phongBan.getIdPB(),
                    phongBan.getQlAccess(),
                    phongBan.getNvAccess(),
                    phongBan.getTenPB()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Thông tin tìm kiếm bị lỗi");
        }
    }
    
    private void first() {
        //phần tử đầu tiên của của bảng
        int first = 0;
        //lấy id của phong ban đầu tiên
        int idPhongBan = (int) (tblQuanLyPhongBan.getValueAt(first, 0));

        //truyền idphongban vào dao để lấy thông tin bên data
        PhongBan pb = new PhongBanDAO().selectByID(idPhongBan);
        //set thông tin đó vào bảng
        this.setForm(pb);
    }
    
    private void last() {
        //lấy phần tử cuối cùng
        //vì trong bằng giá trị đầu tiên là 0 nên phải trừ đi 1 để lấy giá trị cuối cùng
        int last = tblQuanLyPhongBan.getRowCount() - 1;
        //lấy id của phong ban cuối cùng
        int idPhongBan = (int) (tblQuanLyPhongBan.getValueAt(last, 0));

        //truyền idphongban vào dao để lấy thông tin bên data
        PhongBan pb = new PhongBanDAO().selectByID(idPhongBan);
        //set thông tin đó vào bảng
        this.setForm(pb);
    }
    
    private void back() {
        if (indexRowStatic <= 0) {
            //gọi đến phương thức last lấy phần tử cuối cùng
            last();

            //vì trong bằng giá trị đầu tiên là 0 nên phải trừ đi 1 để lấy giá trị cuối cùng
            int last = tblQuanLyPhongBan.getRowCount() - 1;
            indexRowStatic = last;
        } else {
            indexRowStatic -= 1;
            int idPhongBan = (int) (tblQuanLyPhongBan.getValueAt(indexRowStatic, 0));

            //truyền idphongban vào dao để lấy thông tin bên data
            PhongBan pb = new PhongBanDAO().selectByID(idPhongBan);
            //set dữ liệu lên form
            this.setForm(pb);
        }
    }
    
    private void next() {
        if (indexRowStatic >= tblQuanLyPhongBan.getRowCount() - 1) {
            //gọi đến phương thức first lấy phần tử đầu tiên
            first();

            //đặt 0 vào indexRowStaic vì cho nó là phần từ đầu tiền của bảng
            indexRowStatic = 0;
        } else {
            indexRowStatic += 1;
            int idPhongBan = (int) (tblQuanLyPhongBan.getValueAt(indexRowStatic, 0));

            //truyền idphongban vào dao để lấy thông tin bên data
            PhongBan pb = new PhongBanDAO().selectByID(idPhongBan);
            //set dữ liệu lên form
            this.setForm(pb);
        }
    }
}
